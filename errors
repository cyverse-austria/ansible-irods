
cat /var/lib/irods/log/





root@manual-res02:~# cat /var/lib/irods/log/control_log.txt 
2025-02-05T17:57:57.498Z -   DEBUG -                  controller.py:  63 - Calling start on IrodsController
2025-02-05T17:57:57.499Z -   DEBUG -       upgrade_configuration.py:  81 - Upgrading from version 4.1.0 to version 4.3.1.
2025-02-05T17:57:57.499Z -   DEBUG -               configuration.py: 440 - Loading /etc/irods/server_config.json into dictionary
2025-02-05T17:57:57.500Z -    INFO -               configuration.py: 300 - Updating /var/lib/irods/version.json...
2025-02-05T17:57:57.501Z -   DEBUG -               configuration.py: 440 - Loading /etc/irods/server_config.json into dictionary
2025-02-05T17:57:57.501Z -   DEBUG -               configuration.py: 440 - Loading /var/lib/irods/version.json into dictionary
2025-02-05T17:57:57.501Z -   DEBUG -               configuration.py: 440 - Loading /var/lib/irods/.irods/irods_environment.json into dictionary
2025-02-05T17:57:57.502Z -   DEBUG -               configuration.py: 199 - Attempting to construct schema URI...
2025-02-05T17:57:57.502Z -   DEBUG -               configuration.py: 210 - Successfully constructed schema URI.
2025-02-05T17:57:57.502Z -   DEBUG -               configuration.py: 281 - Attempting to validate /etc/irods/server_config.json against file:///var/lib/irods/configuration_schemas/v4/server_config.json
2025-02-05T17:57:57.502Z -   DEBUG -             json_validation.py:  85 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/server_config.json
2025-02-05T17:57:57.502Z -   DEBUG -             json_validation.py:  87 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/server_config.json
2025-02-05T17:57:57.502Z -   DEBUG -             json_validation.py:  58 - Validating /etc/irods/server_config.json against json schema:
2025-02-05T17:57:57.511Z -   DEBUG -             json_validation.py:  59 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/server_config.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'advanced_settings': {'properties': {'agent_factory_watcher_sleep_time_in_seconds': {'type': 'integer'},
                                                     'default_number_of_transfer_threads': {'type': 'integer'},
                                                     'default_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'delay_rule_executors': {'items': {'type': 'string'},
                                                                              'type': 'array',
                                                                              'uniqueItems': True},
                                                     'delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'dns_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                  'eviction_age_in_seconds': {'type': 'integer'},
                                                                                  'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                   'type': 'object'},
                                                     'hostname_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                       'eviction_age_in_seconds': {'type': 'integer'},
                                                                                       'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                        'type': 'object'},
                                                     'maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                                                     'maximum_size_of_delay_queue_in_bytes': {'type': 'integer'},
                                                     'maximum_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'migrate_delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'number_of_concurrent_delay_rule_executors': {'type': 'integer'},
                                                     'stacktrace_file_processor_sleep_time_in_seconds': {'type': 'integer'},
                                                     'transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                                                     'transfer_chunk_size_for_parallel_transfer_in_megabytes': {'type': 'integer'}},
                                      'required': ['default_number_of_transfer_threads',
                                                   'default_temporary_password_lifetime_in_seconds',
                                                   'maximum_size_for_single_buffer_in_megabytes',
                                                   'maximum_temporary_password_lifetime_in_seconds',
                                                   'transfer_buffer_size_for_parallel_transfer_in_megabytes',
                                                   'transfer_chunk_size_for_parallel_transfer_in_megabytes'],
                                      'type': 'object'},
                'catalog_provider_hosts': {'items': {'type': 'string'},
                                           'minItems': 1,
                                           'type': 'array',
                                           'uniqueItems': True},
                'catalog_service_role': {'enum': ['consumer', 'provider']},
                'client_api_allowlist_policy': {'enum': ['disabled',
                                                         'enforce']},
                'controlled_user_connection_list': {'properties': {'control_type': {'enum': ['denylist',
                                                                                             'allowlist']},
                                                                   'users': {'items': {'type': 'string'},
                                                                             'type': 'array',
                                                                             'uniqueItems': True}},
                                                    'type': 'object'},
                'default_dir_mode': {'type': 'string'},
                'default_file_mode': {'type': 'string'},
                'default_hash_scheme': {'type': 'string'},
                'environment_variables': {'additionalProperties': {'type': 'string'},
                                          'type': 'object'},
                'federation': {'items': {'properties': {'catalog_provider_hosts': {'items': {'type': 'string'},
                                                                                   'minItems': 1,
                                                                                   'type': 'array',
                                                                                   'uniqueItems': True},
                                                        'negotiation_key': {'maxLength': 32,
                                                                            'minLength': 32,
                                                                            'pattern': '^[A-Za-z0-9_]+$',
                                                                            'type': 'string'},
                                                        'zone_key': {'maxLength': 49,
                                                                     'pattern': '^[A-Za-z0-9_]+$',
                                                                     'type': 'string'},
                                                        'zone_name': {'maxLength': 63,
                                                                      'pattern': '^[A-Za-z0-9_\\.]+$',
                                                                      'type': 'string'},
                                                        'zone_port': {'type': 'integer'}},
                                         'required': ['catalog_provider_hosts',
                                                      'negotiation_key',
                                                      'zone_key',
                                                      'zone_name'],
                                         'type': 'object'},
                               'type': 'array'},
                'host_access_control': {'$ref': 'host_access_control.json'},
                'host_resolution': {'$ref': 'host_resolution.json'},
                'log_level': {'items': {'properties': {'agent': {'enum': ['trace',
                                                                          'debug',
                                                                          'info',
                                                                          'warn',
                                                                          'error',
                                                                          'critical'],
                                                                 'maxItems': 1},
                                                       'agent_factory': {'enum': ['trace',
                                                                                  'debug',
                                                                                  'info',
                                                                                  'warn',
                                                                                  'error',
                                                                                  'critical'],
                                                                         'maxItems': 1},
                                                       'api': {'enum': ['trace',
                                                                        'debug',
                                                                        'info',
                                                                        'warn',
                                                                        'error',
                                                                        'critical'],
                                                               'maxItems': 1},
                                                       'authentication': {'enum': ['trace',
                                                                                   'debug',
                                                                                   'info',
                                                                                   'warn',
                                                                                   'error',
                                                                                   'critical'],
                                                                          'maxItems': 1},
                                                       'database': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'delay_server': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'legacy': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1},
                                                       'microservice': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'network': {'enum': ['trace',
                                                                            'debug',
                                                                            'info',
                                                                            'warn',
                                                                            'error',
                                                                            'critical'],
                                                                   'maxItems': 1},
                                                       'resource': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'rule_engine': {'enum': ['trace',
                                                                                'debug',
                                                                                'info',
                                                                                'warn',
                                                                                'error',
                                                                                'critical'],
                                                                       'maxItems': 1},
                                                       'server': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1}}},
                              'type': 'object'},
                'match_hash_policy': {'type': 'string'},
                'maximum_connections': {'minimum': 1, 'type': 'integer'},
                'negotiation_key': {'maxLength': 32,
                                    'minLength': 32,
                                    'pattern': '^[A-Za-z0-9_]+$',
                                    'type': 'string'},
                'plugin_configuration': {'properties': {'authentication': {'properties': {},
                                                                           'type': 'object'},
                                                        'database': {'additionalProperties': {'$ref': 'database_config.json'},
                                                                     'maxProperties': 1,
                                                                     'minProperties': 1,
                                                                     'type': 'object'},
                                                        'network': {'properties': {},
                                                                    'type': 'object'},
                                                        'resource': {'properties': {},
                                                                     'type': 'object'},
                                                        'rule_engines': {'items': {'$ref': 'rule_engine.json'},
                                                                         'minItems': 1,
                                                                         'type': 'array'}},
                                         'required': ['authentication',
                                                      'network',
                                                      'resource',
                                                      'rule_engines'],
                                         'type': 'object'},
                'schema_name': {'type': 'string'},
                'schema_validation_base_uri': {'type': 'string'},
                'schema_version': {'type': 'string'},
                'server_control_plane_encryption_algorithm': {'type': 'string'},
                'server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'server_control_plane_key': {'maxLength': 32,
                                             'minLength': 32,
                                             'type': 'string'},
                'server_control_plane_port': {'type': 'integer'},
                'server_control_plane_timeout_milliseconds': {'type': 'integer'},
                'server_port_range_end': {'type': 'integer'},
                'server_port_range_start': {'type': 'integer'},
                'zone_auth_scheme': {'type': 'string'},
                'zone_key': {'maxLength': 49,
                             'pattern': '^[A-Za-z0-9_]+$',
                             'type': 'string'},
                'zone_name': {'maxLength': 63,
                              'pattern': '^[A-Za-z0-9_\\.]+$',
                              'type': 'string'},
                'zone_port': {'type': 'integer'},
                'zone_user': {'type': 'string'}},
 'required': ['advanced_settings',
              'catalog_provider_hosts',
              'catalog_service_role',
              'client_api_allowlist_policy',
              'controlled_user_connection_list',
              'default_dir_mode',
              'default_file_mode',
              'default_hash_scheme',
              'environment_variables',
              'federation',
              'host_access_control',
              'host_resolution',
              'log_level',
              'match_hash_policy',
              'negotiation_key',
              'plugin_configuration',
              'rule_engine_namespaces',
              'schema_name',
              'schema_validation_base_uri',
              'schema_version',
              'server_control_plane_encryption_algorithm',
              'server_control_plane_encryption_num_hash_rounds',
              'server_control_plane_key',
              'server_control_plane_port',
              'server_control_plane_timeout_milliseconds',
              'server_port_range_end',
              'server_port_range_start',
              'zone_auth_scheme',
              'zone_key',
              'zone_name',
              'zone_port',
              'zone_user'],
 'type': 'object'}
2025-02-05T17:57:57.530Z -    INFO -             json_validation.py:  81 - Validating [/etc/irods/server_config.json]... Success
2025-02-05T17:57:57.530Z -   DEBUG -               configuration.py: 281 - Attempting to validate /var/lib/irods/version.json against file:///var/lib/irods/configuration_schemas/v4/version.json
2025-02-05T17:57:57.530Z -   DEBUG -             json_validation.py:  85 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/version.json
2025-02-05T17:57:57.530Z -   DEBUG -             json_validation.py:  87 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/version.json
2025-02-05T17:57:57.530Z -   DEBUG -             json_validation.py:  58 - Validating /var/lib/irods/version.json against json schema:
2025-02-05T17:57:57.531Z -   DEBUG -             json_validation.py:  59 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/version.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'catalog_schema_version': {'type': 'integer'},
                'commit_id': {'pattern': '^[0-9a-f]{40}$', 'type': 'string'},
                'installation_time': {'format': 'date-time', 'type': 'string'},
                'irods_version': {'type': 'string'},
                'previous_version': {'oneOf': [{'$ref': '#'},
                                               {'properties': {'catalog_schema_version': {'type': 'integer'},
                                                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                                                             'type': 'string'},
                                                               'configuration_schema_version': {'type': 'integer'},
                                                               'installation_time': {'format': 'date-time',
                                                                                     'type': 'string'},
                                                               'irods_version': {'type': 'string'},
                                                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                                                'required': ['catalog_schema_version',
                                                             'commit_id',
                                                             'configuration_schema_version',
                                                             'irods_version'],
                                                'type': 'object'}]},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['catalog_schema_version',
              'commit_id',
              'irods_version',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2025-02-05T17:57:57.534Z -   ERROR -               irods_control.py: 126 - Error encountered running irods_control start:
Traceback (most recent call last):
  File "/var/lib/irods/scripts/irods/json_validation.py", line 60, in validate_dict
    jsonschema.validate(config_dict, schema, resolver=jsonschema.RefResolver(schema_uri, schema))
  File "/usr/lib/python3/dist-packages/jsonschema/validators.py", line 934, in validate
    raise error
jsonschema.exceptions.ValidationError: {'catalog_schema_version': 1, 'commit_id': '0000000000000000000000000000000000000000', 'configuration_schema_version': 2, 'irods_version': '4.1.0', 'schema_name': 'VERSION', 'schema_version': 'v2'} is valid under each of {'type': 'object', 'properties': {'catalog_schema_version': {'type': 'integer'}, 'commit_id': {'type': 'string', 'pattern': '^[0-9a-f]{40}$'}, 'configuration_schema_version': {'type': 'integer'}, 'installation_time': {'type': 'string', 'format': 'date-time'}, 'irods_version': {'type': 'string'}, 'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}}, 'required': ['catalog_schema_version', 'commit_id', 'configuration_schema_version', 'irods_version']}, {'$ref': '#'}

Failed validating 'oneOf' in schema['properties']['previous_version']:
    {'oneOf': [{'$ref': '#'},
               {'properties': {'catalog_schema_version': {'type': 'integer'},
                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                             'type': 'string'},
                               'configuration_schema_version': {'type': 'integer'},
                               'installation_time': {'format': 'date-time',
                                                     'type': 'string'},
                               'irods_version': {'type': 'string'},
                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                'required': ['catalog_schema_version',
                             'commit_id',
                             'configuration_schema_version',
                             'irods_version'],
                'type': 'object'}]}

On instance['previous_version']:
    {'catalog_schema_version': 1,
     'commit_id': '0000000000000000000000000000000000000000',
     'configuration_schema_version': 2,
     'irods_version': '4.1.0',
     'schema_name': 'VERSION',
     'schema_version': 'v2'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/var/lib/irods/./scripts/irods_control.py", line 124, in main
    operations_dict[operation]()
  File "/var/lib/irods/./scripts/irods_control.py", line 70, in <lambda>
    operations_dict['start'] = lambda: irods_controller.start(write_to_stdout=options.write_to_stdout, test_mode=options.test_mode)
  File "/var/lib/irods/scripts/irods/controller.py", line 69, in start
    self.config.validate_configuration()
  File "/var/lib/irods/scripts/irods/configuration.py", line 283, in validate_configuration
    json_validation.validate_dict(
  File "/var/lib/irods/scripts/irods/json_validation.py", line 75, in validate_dict
    six.reraise(IrodsError,  IrodsError('\n\t'.join([
  File "/var/lib/irods/scripts/irods/six.py", line 671, in reraise
    raise value.with_traceback(tb)
  File "/var/lib/irods/scripts/irods/json_validation.py", line 60, in validate_dict
    jsonschema.validate(config_dict, schema, resolver=jsonschema.RefResolver(schema_uri, schema))
  File "/usr/lib/python3/dist-packages/jsonschema/validators.py", line 934, in validate
    raise error
irods.exceptions.IrodsError: ERROR: Validation Failed for [/var/lib/irods/version.json]:
	against [file:///var/lib/irods/configuration_schemas/v4/version.json]
	ValidationError: {'catalog_schema_version': 1, 'commit_id': '0000000000000000000000000000000000000000', 'configuration_schema_version': 2, 'irods_version': '4.1.0', 'schema_name': 'VERSION', 'schema_version': 'v2'} is valid under each of {'type': 'object', 'properties': {'catalog_schema_version': {'type': 'integer'}, 'commit_id': {'type': 'string', 'pattern': '^[0-9a-f]{40}$'}, 'configuration_schema_version': {'type': 'integer'}, 'installation_time': {'type': 'string', 'format': 'date-time'}, 'irods_version': {'type': 'string'}, 'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}}, 'required': ['catalog_schema_version', 'commit_id', 'configuration_schema_version', 'irods_version']}, {'$ref': '#'}

Failed validating 'oneOf' in schema['properties']['previous_version']:
    {'oneOf': [{'$ref': '#'},
               {'properties': {'catalog_schema_version': {'type': 'integer'},
                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                             'type': 'string'},
                               'configuration_schema_version': {'type': 'integer'},
                               'installation_time': {'format': 'date-time',
                                                     'type': 'string'},
                               'irods_version': {'type': 'string'},
                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                'required': ['catalog_schema_version',
                             'commit_id',
                             'configuration_schema_version',
                             'irods_version'],
                'type': 'object'}]}

On instance['previous_version']:
    {'catalog_schema_version': 1,
     'commit_id': '0000000000000000000000000000000000000000',
     'configuration_schema_version': 2,
     'irods_version': '4.1.0',
     'schema_name': 'VERSION',
     'schema_version': 'v2'}
2025-02-05T17:57:57.538Z -    INFO -               irods_control.py: 128 - Exiting...
